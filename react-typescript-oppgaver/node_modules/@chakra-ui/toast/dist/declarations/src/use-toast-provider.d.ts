import * as React from "react";
import { ToastId, ToastMessage, ToastState } from "./toast.types";
import { ToastPosition } from "./toast.placement";
import { ToastProviderProps } from "./toast.provider";
export declare function useToastProvider(defaultOptions?: Omit<ToastProviderProps, "children">): {
    areas: ToastState;
    getStyle: (position: ToastPosition) => React.CSSProperties;
    toast: {
        notify: (message: ToastMessage, options?: Partial<Pick<import("./toast.types").ToastOptions, "position" | "id" | "status" | "duration" | "onCloseComplete" | "containerStyle">> | undefined) => ToastId;
        closeAll: (options?: import("./toast.types").CloseAllToastsOptions | undefined) => void;
        close: (id: ToastId) => void;
        update: (id: ToastId, options: Partial<Pick<import("./toast.types").ToastOptions, "position" | "id" | "status" | "duration" | "onCloseComplete" | "containerStyle">> & {
            message?: ToastMessage | undefined;
        }) => void;
        isActive: (id: ToastId) => boolean;
    };
};
//# sourceMappingURL=use-toast-provider.d.ts.map
{"ast":null,"code":"import * as React from 'react';\nimport React__default, { useState, useMemo, useCallback, useEffect, useRef } from 'react';\nimport { u as useCallbackRef, a as useSafeLayoutEffect, b as useEventListener } from './use-animation-state-5054a9f7.esm.js';\nexport { c as useAnimationState, u as useCallbackRef, b as useEventListener, a as useSafeLayoutEffect } from './use-animation-state-5054a9f7.esm.js';\nimport copy from 'copy-to-clipboard';\nimport { runIfFn, getBox, callAllHandlers, wrapPointerEventHandler, getPointerEventName, hasFocusWithin, focus, getActiveElement, contains, isTabbable, detectBrowser, isRefObject, isActiveElement, getOwnerDocument, getAllFocusable, noop, PanSession } from '@chakra-ui/utils';\n/**\n * React hook to manage boolean (on - off) states\n *\n * @param initialState the initial boolean state value\n */\n\nfunction useBoolean(initialState) {\n  if (initialState === void 0) {\n    initialState = false;\n  }\n\n  var _useState = useState(initialState),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var callbacks = useMemo(function () {\n    return {\n      on: function on() {\n        return setValue(true);\n      },\n      off: function off() {\n        return setValue(false);\n      },\n      toggle: function toggle() {\n        return setValue(function (prev) {\n          return !prev;\n        });\n      }\n    };\n  }, []);\n  return [value, callbacks];\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded = [\"timeout\"];\n/**\n * React hook to copy content to clipboard\n *\n * @param text the text or value to copy\n * @param {Number} [optionsOrTimeout=1500] optionsOrTimeout - delay (in ms) to switch back to initial state once copied.\n * @param {Object} optionsOrTimeout\n * @param {string} optionsOrTimeout.format - set the desired MIME type\n * @param {number} optionsOrTimeout.timeout - delay (in ms) to switch back to initial state once copied.\n */\n\nfunction useClipboard(text, optionsOrTimeout) {\n  if (optionsOrTimeout === void 0) {\n    optionsOrTimeout = {};\n  }\n\n  var _useState = useState(false),\n      hasCopied = _useState[0],\n      setHasCopied = _useState[1];\n\n  var _ref = typeof optionsOrTimeout === \"number\" ? {\n    timeout: optionsOrTimeout\n  } : optionsOrTimeout,\n      _ref$timeout = _ref.timeout,\n      timeout = _ref$timeout === void 0 ? 1500 : _ref$timeout,\n      copyOptions = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var onCopy = useCallback(function () {\n    var didCopy = copy(text, copyOptions);\n    setHasCopied(didCopy);\n  }, [text, copyOptions]);\n  useEffect(function () {\n    var timeoutId = null;\n\n    if (hasCopied) {\n      timeoutId = window.setTimeout(function () {\n        setHasCopied(false);\n      }, timeout);\n    }\n\n    return function () {\n      if (timeoutId) {\n        window.clearTimeout(timeoutId);\n      }\n    };\n  }, [timeout, hasCopied]);\n  return {\n    value: text,\n    onCopy: onCopy,\n    hasCopied: hasCopied\n  };\n}\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConst`\n * you can ensure that initializers don't execute twice or more.\n */\n\n\nfunction useConst(init) {\n  // Use useRef to store the value because it's the least expensive built-in\n  // hook that works here. We could also use `useState` but that's more\n  // expensive internally due to reducer handling which we don't need.\n  var ref = useRef(null);\n\n  if (ref.current === null) {\n    ref.current = typeof init === \"function\" ? init() : init;\n  }\n\n  return ref.current;\n}\n\nfunction useControllableProp(prop, state) {\n  var isControlled = prop !== undefined;\n  var value = isControlled && typeof prop !== \"undefined\" ? prop : state;\n  return [isControlled, value];\n}\n/**\n * React hook for using controlling component state.\n * @param props\n */\n\n\nfunction useControllableState(props) {\n  var valueProp = props.value,\n      defaultValue = props.defaultValue,\n      onChange = props.onChange,\n      _props$shouldUpdate = props.shouldUpdate,\n      shouldUpdate = _props$shouldUpdate === void 0 ? function (prev, next) {\n    return prev !== next;\n  } : _props$shouldUpdate;\n  var onChangeProp = useCallbackRef(onChange);\n  var shouldUpdateProp = useCallbackRef(shouldUpdate);\n\n  var _React$useState = React.useState(defaultValue),\n      valueState = _React$useState[0],\n      setValue = _React$useState[1];\n\n  var isControlled = valueProp !== undefined;\n  var value = isControlled ? valueProp : valueState;\n  var updateValue = React.useCallback(function (next) {\n    var nextValue = runIfFn(next, value);\n\n    if (!shouldUpdateProp(value, nextValue)) {\n      return;\n    }\n\n    if (!isControlled) {\n      setValue(nextValue);\n    }\n\n    onChangeProp(nextValue);\n  }, [isControlled, onChangeProp, value, shouldUpdateProp]);\n  return [value, updateValue];\n}\n/**\n * React hook to measure a component's dimensions\n *\n * @param ref ref of the component to measure\n * @param observe if `true`, resize and scroll observers will be turned on\n */\n\n\nfunction useDimensions(ref, observe) {\n  var _React$useState = React.useState(null),\n      dimensions = _React$useState[0],\n      setDimensions = _React$useState[1];\n\n  var rafId = React.useRef();\n  useSafeLayoutEffect(function () {\n    if (!ref.current) return undefined;\n    var node = ref.current;\n\n    function measure() {\n      rafId.current = requestAnimationFrame(function () {\n        var boxModel = getBox(node);\n        setDimensions(boxModel);\n      });\n    }\n\n    measure();\n\n    if (observe) {\n      window.addEventListener(\"resize\", measure);\n      window.addEventListener(\"scroll\", measure);\n    }\n\n    return function () {\n      if (observe) {\n        window.removeEventListener(\"resize\", measure);\n        window.removeEventListener(\"scroll\", measure);\n      }\n\n      if (rafId.current) {\n        cancelAnimationFrame(rafId.current);\n      }\n    };\n  }, [observe]);\n  return dimensions;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n} // This implementation is heavily inspired by react-aria's implementation\n\n\nfunction useId(idProp, prefix) {\n  var id = React.useId();\n  return React.useMemo(function () {\n    return idProp || [prefix, id].filter(Boolean).join(\"-\");\n  }, [idProp, prefix, id]);\n}\n/**\n * React hook to generate ids for use in compound components\n *\n * @param idProp the external id passed from the user\n * @param prefixes array of prefixes to use\n *\n * @example\n *\n * ```js\n * const [buttonId, menuId] = useIds(\"52\", \"button\", \"menu\")\n *\n * // buttonId will be `button-52`\n * // menuId will be `menu-52`\n * ```\n */\n\n\nfunction useIds(idProp) {\n  for (var _len = arguments.length, prefixes = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    prefixes[_key - 1] = arguments[_key];\n  }\n\n  var id = useId(idProp);\n  return React.useMemo(function () {\n    return prefixes.map(function (prefix) {\n      return prefix + \"-\" + id;\n    });\n  }, [id, prefixes]);\n}\n/**\n * Used to generate an id, and after render, check if that id is rendered, so we know\n * if we can use it in places such as `aria-labelledby`.\n *\n * @param partId - The unique id for the component part\n *\n * @example\n * const { ref, id } = useOptionalPart<HTMLInputElement>(`${id}-label`)\n */\n\n\nfunction useOptionalPart(partId) {\n  var _React$useState = React.useState(null),\n      id = _React$useState[0],\n      setId = _React$useState[1];\n\n  var ref = React.useCallback(function (node) {\n    setId(node ? partId : null);\n  }, [partId]);\n  return {\n    ref: ref,\n    id: id,\n    isRendered: Boolean(id)\n  };\n}\n\nfunction useDisclosure(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      onCloseProp = _props.onClose,\n      onOpenProp = _props.onOpen,\n      isOpenProp = _props.isOpen,\n      idProp = _props.id;\n  var onOpenPropCallbackRef = useCallbackRef(onOpenProp);\n  var onClosePropCallbackRef = useCallbackRef(onCloseProp);\n\n  var _React$useState = React.useState(props.defaultIsOpen || false),\n      isOpenState = _React$useState[0],\n      setIsOpen = _React$useState[1];\n\n  var _useControllableProp = useControllableProp(isOpenProp, isOpenState),\n      isControlled = _useControllableProp[0],\n      isOpen = _useControllableProp[1];\n\n  var id = useId(idProp, \"disclosure\");\n  var onClose = React.useCallback(function () {\n    if (!isControlled) {\n      setIsOpen(false);\n    }\n\n    onClosePropCallbackRef == null ? void 0 : onClosePropCallbackRef();\n  }, [isControlled, onClosePropCallbackRef]);\n  var onOpen = React.useCallback(function () {\n    if (!isControlled) {\n      setIsOpen(true);\n    }\n\n    onOpenPropCallbackRef == null ? void 0 : onOpenPropCallbackRef();\n  }, [isControlled, onOpenPropCallbackRef]);\n  var onToggle = React.useCallback(function () {\n    var action = isOpen ? onClose : onOpen;\n    action();\n  }, [isOpen, onOpen, onClose]);\n  return {\n    isOpen: !!isOpen,\n    onOpen: onOpen,\n    onClose: onClose,\n    onToggle: onToggle,\n    isControlled: isControlled,\n    getButtonProps: function getButtonProps(props) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      return _extends({}, props, {\n        \"aria-expanded\": isOpen,\n        \"aria-controls\": id,\n        onClick: callAllHandlers(props.onClick, onToggle)\n      });\n    },\n    getDisclosureProps: function getDisclosureProps(props) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      return _extends({}, props, {\n        hidden: !isOpen,\n        id: id\n      });\n    }\n  };\n}\n\nfunction useEventListenerMap() {\n  var listeners = React.useRef(new Map());\n  var currentListeners = listeners.current;\n  var add = React.useCallback(function (el, type, listener, options) {\n    var pointerEventListener = wrapPointerEventHandler(listener, type === \"pointerdown\");\n    listeners.current.set(listener, {\n      __listener: pointerEventListener,\n      type: getPointerEventName(type),\n      el: el,\n      options: options\n    });\n    el.addEventListener(type, pointerEventListener, options);\n  }, []);\n  var remove = React.useCallback(function (el, type, listener, options) {\n    var _listeners$current$ge = listeners.current.get(listener),\n        pointerEventListener = _listeners$current$ge.__listener;\n\n    el.removeEventListener(type, pointerEventListener, options);\n    listeners.current[\"delete\"](pointerEventListener);\n  }, []);\n  React.useEffect(function () {\n    return function () {\n      currentListeners.forEach(function (value, key) {\n        remove(value.el, value.type, key, value.options);\n      });\n    };\n  }, [remove, currentListeners]);\n  return {\n    add: add,\n    remove: remove\n  };\n}\n/**\n * React effect hook that invokes only on update.\n * It doesn't invoke on mount\n */\n\n\nvar useUpdateEffect = function useUpdateEffect(effect, deps) {\n  var renderCycleRef = React.useRef(false);\n  var effectCycleRef = React.useRef(false);\n  React.useEffect(function () {\n    var isMounted = renderCycleRef.current;\n    var shouldRun = isMounted && effectCycleRef.current;\n\n    if (shouldRun) {\n      return effect();\n    }\n\n    effectCycleRef.current = true; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n  React.useEffect(function () {\n    renderCycleRef.current = true;\n    return function () {\n      renderCycleRef.current = false;\n    };\n  }, []);\n};\n/**\n * React hook to focus an element conditionally\n *\n * @param ref the ref of the element to focus\n * @param options focus management options\n */\n\n\nfunction useFocusEffect(ref, options) {\n  var shouldFocus = options.shouldFocus,\n      preventScroll = options.preventScroll;\n  useUpdateEffect(function () {\n    var node = ref.current;\n    if (!node || !shouldFocus) return;\n\n    if (!hasFocusWithin(node)) {\n      focus(node, {\n        preventScroll: preventScroll,\n        nextTick: true\n      });\n    }\n  }, [shouldFocus, ref, preventScroll]);\n}\n\nfunction preventReturnFocus(containerRef) {\n  var el = containerRef.current;\n  if (!el) return false;\n  var activeElement = getActiveElement(el);\n  if (!activeElement) return false;\n  if (contains(el, activeElement)) return false;\n  if (isTabbable(activeElement)) return true;\n  return false;\n}\n/**\n * Popover hook to manage the focus when the popover closes or hides.\n *\n * We either want to return focus back to the popover trigger or\n * let focus proceed normally if user moved to another interactive\n * element in the viewport.\n */\n\n\nfunction useFocusOnHide(containerRef, options) {\n  var shouldFocusProp = options.shouldFocus,\n      visible = options.visible,\n      focusRef = options.focusRef;\n  var shouldFocus = shouldFocusProp && !visible;\n  useUpdateEffect(function () {\n    if (!shouldFocus) return;\n\n    if (preventReturnFocus(containerRef)) {\n      return;\n    }\n\n    var el = (focusRef == null ? void 0 : focusRef.current) || containerRef.current;\n\n    if (el) {\n      focus(el, {\n        nextTick: true\n      });\n    }\n  }, [shouldFocus, containerRef, focusRef]);\n}\n/**\n * Credit goes to `framer-motion` of this useful utilities.\n * License can be found here: https://github.com/framer/motion\n */\n\n/**\n * @internal\n */\n\n\nfunction usePointerEvent(env, eventName, handler, options) {\n  return useEventListener(getPointerEventName(eventName), wrapPointerEventHandler(handler, eventName === \"pointerdown\"), env, options);\n}\n/**\n * Polyfill to get `relatedTarget` working correctly consistently\n * across all browsers.\n *\n * It ensures that elements receives focus on pointer down if\n * it's not the active element.\n *\n * @internal\n */\n\n\nfunction useFocusOnPointerDown(props) {\n  var ref = props.ref,\n      elements = props.elements,\n      enabled = props.enabled;\n  var isSafari = detectBrowser(\"Safari\");\n\n  var doc = function doc() {\n    return getOwnerDocument(ref.current);\n  };\n\n  usePointerEvent(doc, \"pointerdown\", function (event) {\n    if (!isSafari || !enabled) return;\n    var target = event.target;\n    var els = elements != null ? elements : [ref];\n    var isValidTarget = els.some(function (elementOrRef) {\n      var el = isRefObject(elementOrRef) ? elementOrRef.current : elementOrRef;\n      return contains(el, target);\n    });\n\n    if (!isActiveElement(target) && isValidTarget) {\n      event.preventDefault();\n      focus(target);\n    }\n  });\n}\n\nvar defaultOptions = {\n  preventScroll: true,\n  shouldFocus: false\n};\n\nfunction useFocusOnShow(target, options) {\n  if (options === void 0) {\n    options = defaultOptions;\n  }\n\n  var _options = options,\n      focusRef = _options.focusRef,\n      preventScroll = _options.preventScroll,\n      shouldFocus = _options.shouldFocus,\n      visible = _options.visible;\n  var element = isRefObject(target) ? target.current : target;\n  var autoFocus = shouldFocus && visible;\n  var onFocus = useCallback(function () {\n    if (!element || !autoFocus) return;\n    if (contains(element, document.activeElement)) return;\n\n    if (focusRef != null && focusRef.current) {\n      focus(focusRef.current, {\n        preventScroll: preventScroll,\n        nextTick: true\n      });\n    } else {\n      var tabbableEls = getAllFocusable(element);\n\n      if (tabbableEls.length > 0) {\n        focus(tabbableEls[0], {\n          preventScroll: preventScroll,\n          nextTick: true\n        });\n      }\n    }\n  }, [autoFocus, preventScroll, element, focusRef]);\n  useUpdateEffect(function () {\n    onFocus();\n  }, [onFocus]);\n  useEventListener(\"transitionend\", onFocus, element);\n}\n\nfunction useUnmountEffect(fn, deps) {\n  if (deps === void 0) {\n    deps = [];\n  }\n\n  return React.useEffect(function () {\n    return function () {\n      return fn();\n    };\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  deps);\n}\n\nfunction useForceUpdate() {\n  var unloadingRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      count = _React$useState[0],\n      setCount = _React$useState[1];\n\n  useUnmountEffect(function () {\n    unloadingRef.current = true;\n  });\n  return React.useCallback(function () {\n    if (!unloadingRef.current) {\n      setCount(count + 1);\n    }\n  }, [count]);\n}\n/**\n * React Hook that provides a declarative `setInterval`\n *\n * @param callback the callback to execute at interval\n * @param delay the `setInterval` delay (in ms)\n */\n\n\nfunction useInterval(callback, delay) {\n  var fn = useCallbackRef(callback);\n  React.useEffect(function () {\n    var intervalId = null;\n\n    var tick = function tick() {\n      return fn();\n    };\n\n    if (delay !== null) {\n      intervalId = window.setInterval(tick, delay);\n    }\n\n    return function () {\n      if (intervalId) {\n        window.clearInterval(intervalId);\n      }\n    };\n  }, [delay, fn]);\n}\n/**\n * React hook to persist any value between renders,\n * but keeps it up-to-date if it changes.\n *\n * @param value the value or function to persist\n */\n\n\nfunction useLatestRef(value) {\n  var ref = React.useRef(null);\n  ref.current = value;\n  return ref;\n}\n/* eslint-disable react-hooks/exhaustive-deps */\n\n\nfunction assignRef(ref, value) {\n  if (ref == null) return;\n\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n\n  try {\n    // @ts-ignore\n    ref.current = value;\n  } catch (error) {\n    throw new Error(\"Cannot assign value '\" + value + \"' to ref '\" + ref + \"'\");\n  }\n}\n/**\n * React hook that merges react refs into a single memoized function\n *\n * @example\n * import React from \"react\";\n * import { useMergeRefs } from `@chakra-ui/hooks`;\n *\n * const Component = React.forwardRef((props, ref) => {\n *   const internalRef = React.useRef();\n *   return <div {...props} ref={useMergeRefs(internalRef, ref)} />;\n * });\n */\n\n\nfunction useMergeRefs() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n\n  return React.useMemo(function () {\n    if (refs.every(function (ref) {\n      return ref == null;\n    })) {\n      return null;\n    }\n\n    return function (node) {\n      refs.forEach(function (ref) {\n        if (ref) assignRef(ref, node);\n      });\n    };\n  }, refs);\n}\n\nfunction useMouseDownRef(shouldListen) {\n  if (shouldListen === void 0) {\n    shouldListen = true;\n  }\n\n  var mouseDownRef = React__default.useRef();\n  useEventListener(\"mousedown\", function (event) {\n    if (shouldListen) {\n      mouseDownRef.current = event.target;\n    }\n  });\n  return mouseDownRef;\n}\n/**\n * Example, used in components like Dialogs and Popovers, so they can close\n * when a user clicks outside them.\n */\n\n\nfunction useOutsideClick(props) {\n  var ref = props.ref,\n      handler = props.handler,\n      _props$enabled = props.enabled,\n      enabled = _props$enabled === void 0 ? true : _props$enabled;\n  var savedHandler = useCallbackRef(handler);\n  var stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false\n  });\n  var state = stateRef.current;\n  useEffect(function () {\n    if (!enabled) return;\n\n    var onPointerDown = function onPointerDown(e) {\n      if (isValidEvent(e, ref)) {\n        state.isPointerDown = true;\n      }\n    };\n\n    var onMouseUp = function onMouseUp(event) {\n      if (state.ignoreEmulatedMouseEvents) {\n        state.ignoreEmulatedMouseEvents = false;\n        return;\n      }\n\n      if (state.isPointerDown && handler && isValidEvent(event, ref)) {\n        state.isPointerDown = false;\n        savedHandler(event);\n      }\n    };\n\n    var onTouchEnd = function onTouchEnd(event) {\n      state.ignoreEmulatedMouseEvents = true;\n\n      if (handler && state.isPointerDown && isValidEvent(event, ref)) {\n        state.isPointerDown = false;\n        savedHandler(event);\n      }\n    };\n\n    var doc = getOwnerDocument(ref.current);\n    doc.addEventListener(\"mousedown\", onPointerDown, true);\n    doc.addEventListener(\"mouseup\", onMouseUp, true);\n    doc.addEventListener(\"touchstart\", onPointerDown, true);\n    doc.addEventListener(\"touchend\", onTouchEnd, true);\n    return function () {\n      doc.removeEventListener(\"mousedown\", onPointerDown, true);\n      doc.removeEventListener(\"mouseup\", onMouseUp, true);\n      doc.removeEventListener(\"touchstart\", onPointerDown, true);\n      doc.removeEventListener(\"touchend\", onTouchEnd, true);\n    };\n  }, [handler, ref, savedHandler, state, enabled]);\n}\n\nfunction isValidEvent(event, ref) {\n  var _ref$current;\n\n  var target = event.target;\n  if (event.button > 0) return false; // if the event target is no longer in the document\n\n  if (target) {\n    var doc = getOwnerDocument(target);\n    if (!doc.contains(target)) return false;\n  }\n\n  return !((_ref$current = ref.current) != null && _ref$current.contains(target));\n}\n\nfunction usePanGesture(ref, props) {\n  var onPan = props.onPan,\n      onPanStart = props.onPanStart,\n      onPanEnd = props.onPanEnd,\n      onPanSessionStart = props.onPanSessionStart,\n      onPanSessionEnd = props.onPanSessionEnd,\n      threshold = props.threshold;\n  var hasPanEvents = Boolean(onPan || onPanStart || onPanEnd || onPanSessionStart || onPanSessionEnd);\n  var panSession = useRef(null);\n  var handlers = {\n    onSessionStart: onPanSessionStart,\n    onSessionEnd: onPanSessionEnd,\n    onStart: onPanStart,\n    onMove: onPan,\n    onEnd: function onEnd(event, info) {\n      panSession.current = null;\n      onPanEnd == null ? void 0 : onPanEnd(event, info);\n    }\n  };\n  useEffect(function () {\n    var _panSession$current;\n\n    (_panSession$current = panSession.current) == null ? void 0 : _panSession$current.updateHandlers(handlers);\n  });\n\n  function onPointerDown(event) {\n    panSession.current = new PanSession(event, handlers, threshold);\n  }\n\n  usePointerEvent(function () {\n    return ref.current;\n  }, \"pointerdown\", hasPanEvents ? onPointerDown : noop);\n  useUnmountEffect(function () {\n    var _panSession$current2;\n\n    (_panSession$current2 = panSession.current) == null ? void 0 : _panSession$current2.end();\n    panSession.current = null;\n  });\n}\n\nfunction usePrevious(value) {\n  var ref = useRef();\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n/**\n * Checks if the key pressed is a printable character\n * and can be used for shortcut navigation\n */\n\n\nfunction isPrintableCharacter(event) {\n  var key = event.key;\n  return key.length === 1 || key.length > 1 && /[^a-zA-Z0-9]/.test(key);\n}\n/**\n * React hook that provides an enhanced keydown handler,\n * that's used for key navigation within menus, select dropdowns.\n */\n\n\nfunction useShortcut(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      _props$timeout = _props.timeout,\n      timeout = _props$timeout === void 0 ? 300 : _props$timeout,\n      _props$preventDefault = _props.preventDefault,\n      preventDefault = _props$preventDefault === void 0 ? function () {\n    return true;\n  } : _props$preventDefault;\n\n  var _React$useState = React.useState([]),\n      keys = _React$useState[0],\n      setKeys = _React$useState[1];\n\n  var timeoutRef = React.useRef();\n\n  var flush = function flush() {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = null;\n    }\n  };\n\n  var clearKeysAfterDelay = function clearKeysAfterDelay() {\n    flush();\n    timeoutRef.current = setTimeout(function () {\n      setKeys([]);\n      timeoutRef.current = null;\n    }, timeout);\n  };\n\n  React.useEffect(function () {\n    return flush;\n  }, []);\n\n  function onKeyDown(fn) {\n    return function (event) {\n      if (event.key === \"Backspace\") {\n        var keysCopy = [].concat(keys);\n        keysCopy.pop();\n        setKeys(keysCopy);\n        return;\n      }\n\n      if (isPrintableCharacter(event)) {\n        var _keysCopy = keys.concat(event.key);\n\n        if (preventDefault(event)) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n\n        setKeys(_keysCopy);\n        fn(_keysCopy.join(\"\"));\n        clearKeysAfterDelay();\n      }\n    };\n  }\n\n  return onKeyDown;\n}\n/**\n * React hook that provides a declarative `setTimeout`\n *\n * @param callback the callback to run after specified delay\n * @param delay the delay (in ms)\n */\n\n\nfunction useTimeout(callback, delay) {\n  var fn = useCallbackRef(callback);\n  React.useEffect(function () {\n    if (delay == null) return undefined;\n    var timeoutId = null;\n    timeoutId = window.setTimeout(function () {\n      fn();\n    }, delay);\n    return function () {\n      if (timeoutId) {\n        window.clearTimeout(timeoutId);\n      }\n    };\n  }, [delay, fn]);\n}\n\nfunction useWhyDidYouUpdate(name, props) {\n  var previousProps = React.useRef();\n  React.useEffect(function () {\n    if (previousProps.current) {\n      var allKeys = Object.keys(_extends({}, previousProps.current, props));\n      var changesObj = {};\n      allKeys.forEach(function (key) {\n        if (previousProps.current[key] !== props[key]) {\n          changesObj[key] = {\n            from: previousProps.current[key],\n            to: props[key]\n          };\n        }\n      });\n\n      if (Object.keys(changesObj).length) {\n        console.log(\"[why-did-you-update]\", name, changesObj);\n      }\n    }\n\n    previousProps.current = props;\n  });\n}\n\nexport { assignRef, useBoolean, useClipboard, useConst, useControllableProp, useControllableState, useDimensions, useDisclosure, useEventListenerMap, useFocusEffect, useFocusOnHide, useFocusOnPointerDown, useFocusOnShow, useForceUpdate, useId, useIds, useInterval, useLatestRef, useMergeRefs, useMouseDownRef, useOptionalPart, useOutsideClick, usePanGesture, usePointerEvent, usePrevious, useShortcut, useTimeout, useUnmountEffect, useUpdateEffect, useWhyDidYouUpdate };","map":{"version":3,"names":["React","React__default","useState","useMemo","useCallback","useEffect","useRef","u","useCallbackRef","a","useSafeLayoutEffect","b","useEventListener","c","useAnimationState","copy","runIfFn","getBox","callAllHandlers","wrapPointerEventHandler","getPointerEventName","hasFocusWithin","focus","getActiveElement","contains","isTabbable","detectBrowser","isRefObject","isActiveElement","getOwnerDocument","getAllFocusable","noop","PanSession","useBoolean","initialState","_useState","value","setValue","callbacks","on","off","toggle","prev","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","_excluded","useClipboard","text","optionsOrTimeout","hasCopied","setHasCopied","_ref","timeout","_ref$timeout","copyOptions","onCopy","didCopy","timeoutId","window","setTimeout","clearTimeout","useConst","init","ref","current","useControllableProp","prop","state","isControlled","undefined","useControllableState","props","valueProp","defaultValue","onChange","_props$shouldUpdate","shouldUpdate","next","onChangeProp","shouldUpdateProp","_React$useState","valueState","updateValue","nextValue","useDimensions","observe","dimensions","setDimensions","rafId","node","measure","requestAnimationFrame","boxModel","addEventListener","removeEventListener","cancelAnimationFrame","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","useId","idProp","prefix","id","filter","Boolean","join","useIds","_len","prefixes","Array","_key","map","useOptionalPart","partId","setId","isRendered","useDisclosure","_props","onCloseProp","onClose","onOpenProp","onOpen","isOpenProp","isOpen","onOpenPropCallbackRef","onClosePropCallbackRef","defaultIsOpen","isOpenState","setIsOpen","_useControllableProp","onToggle","action","getButtonProps","onClick","getDisclosureProps","hidden","useEventListenerMap","listeners","Map","currentListeners","add","el","type","listener","options","pointerEventListener","set","__listener","remove","_listeners$current$ge","get","forEach","useUpdateEffect","effect","deps","renderCycleRef","effectCycleRef","isMounted","shouldRun","useFocusEffect","shouldFocus","preventScroll","nextTick","preventReturnFocus","containerRef","activeElement","useFocusOnHide","shouldFocusProp","visible","focusRef","usePointerEvent","env","eventName","handler","useFocusOnPointerDown","elements","enabled","isSafari","doc","event","els","isValidTarget","some","elementOrRef","preventDefault","defaultOptions","useFocusOnShow","_options","element","autoFocus","onFocus","document","tabbableEls","useUnmountEffect","fn","useForceUpdate","unloadingRef","count","setCount","useInterval","callback","delay","intervalId","tick","setInterval","clearInterval","useLatestRef","assignRef","error","Error","useMergeRefs","refs","every","useMouseDownRef","shouldListen","mouseDownRef","useOutsideClick","_props$enabled","savedHandler","stateRef","isPointerDown","ignoreEmulatedMouseEvents","onPointerDown","e","isValidEvent","onMouseUp","onTouchEnd","_ref$current","button","usePanGesture","onPan","onPanStart","onPanEnd","onPanSessionStart","onPanSessionEnd","threshold","hasPanEvents","panSession","handlers","onSessionStart","onSessionEnd","onStart","onMove","onEnd","info","_panSession$current","updateHandlers","_panSession$current2","end","usePrevious","isPrintableCharacter","test","useShortcut","_props$timeout","_props$preventDefault","setKeys","timeoutRef","flush","clearKeysAfterDelay","onKeyDown","keysCopy","concat","pop","_keysCopy","stopPropagation","useTimeout","useWhyDidYouUpdate","name","previousProps","allKeys","changesObj","from","to","console","log"],"sources":["/Users/ingeborg/projects/code/typescript-ws-2022/node_modules/@chakra-ui/hooks/dist/chakra-ui-hooks.esm.js"],"sourcesContent":["import * as React from 'react';\nimport React__default, { useState, useMemo, useCallback, useEffect, useRef } from 'react';\nimport { u as useCallbackRef, a as useSafeLayoutEffect, b as useEventListener } from './use-animation-state-5054a9f7.esm.js';\nexport { c as useAnimationState, u as useCallbackRef, b as useEventListener, a as useSafeLayoutEffect } from './use-animation-state-5054a9f7.esm.js';\nimport copy from 'copy-to-clipboard';\nimport { runIfFn, getBox, callAllHandlers, wrapPointerEventHandler, getPointerEventName, hasFocusWithin, focus, getActiveElement, contains, isTabbable, detectBrowser, isRefObject, isActiveElement, getOwnerDocument, getAllFocusable, noop, PanSession } from '@chakra-ui/utils';\n\n/**\n * React hook to manage boolean (on - off) states\n *\n * @param initialState the initial boolean state value\n */\nfunction useBoolean(initialState) {\n  if (initialState === void 0) {\n    initialState = false;\n  }\n\n  var _useState = useState(initialState),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var callbacks = useMemo(function () {\n    return {\n      on: function on() {\n        return setValue(true);\n      },\n      off: function off() {\n        return setValue(false);\n      },\n      toggle: function toggle() {\n        return setValue(function (prev) {\n          return !prev;\n        });\n      }\n    };\n  }, []);\n  return [value, callbacks];\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded = [\"timeout\"];\n\n/**\n * React hook to copy content to clipboard\n *\n * @param text the text or value to copy\n * @param {Number} [optionsOrTimeout=1500] optionsOrTimeout - delay (in ms) to switch back to initial state once copied.\n * @param {Object} optionsOrTimeout\n * @param {string} optionsOrTimeout.format - set the desired MIME type\n * @param {number} optionsOrTimeout.timeout - delay (in ms) to switch back to initial state once copied.\n */\nfunction useClipboard(text, optionsOrTimeout) {\n  if (optionsOrTimeout === void 0) {\n    optionsOrTimeout = {};\n  }\n\n  var _useState = useState(false),\n      hasCopied = _useState[0],\n      setHasCopied = _useState[1];\n\n  var _ref = typeof optionsOrTimeout === \"number\" ? {\n    timeout: optionsOrTimeout\n  } : optionsOrTimeout,\n      _ref$timeout = _ref.timeout,\n      timeout = _ref$timeout === void 0 ? 1500 : _ref$timeout,\n      copyOptions = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var onCopy = useCallback(function () {\n    var didCopy = copy(text, copyOptions);\n    setHasCopied(didCopy);\n  }, [text, copyOptions]);\n  useEffect(function () {\n    var timeoutId = null;\n\n    if (hasCopied) {\n      timeoutId = window.setTimeout(function () {\n        setHasCopied(false);\n      }, timeout);\n    }\n\n    return function () {\n      if (timeoutId) {\n        window.clearTimeout(timeoutId);\n      }\n    };\n  }, [timeout, hasCopied]);\n  return {\n    value: text,\n    onCopy: onCopy,\n    hasCopied: hasCopied\n  };\n}\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConst`\n * you can ensure that initializers don't execute twice or more.\n */\nfunction useConst(init) {\n  // Use useRef to store the value because it's the least expensive built-in\n  // hook that works here. We could also use `useState` but that's more\n  // expensive internally due to reducer handling which we don't need.\n  var ref = useRef(null);\n\n  if (ref.current === null) {\n    ref.current = typeof init === \"function\" ? init() : init;\n  }\n\n  return ref.current;\n}\n\nfunction useControllableProp(prop, state) {\n  var isControlled = prop !== undefined;\n  var value = isControlled && typeof prop !== \"undefined\" ? prop : state;\n  return [isControlled, value];\n}\n\n/**\n * React hook for using controlling component state.\n * @param props\n */\nfunction useControllableState(props) {\n  var valueProp = props.value,\n      defaultValue = props.defaultValue,\n      onChange = props.onChange,\n      _props$shouldUpdate = props.shouldUpdate,\n      shouldUpdate = _props$shouldUpdate === void 0 ? function (prev, next) {\n    return prev !== next;\n  } : _props$shouldUpdate;\n  var onChangeProp = useCallbackRef(onChange);\n  var shouldUpdateProp = useCallbackRef(shouldUpdate);\n\n  var _React$useState = React.useState(defaultValue),\n      valueState = _React$useState[0],\n      setValue = _React$useState[1];\n\n  var isControlled = valueProp !== undefined;\n  var value = isControlled ? valueProp : valueState;\n  var updateValue = React.useCallback(function (next) {\n    var nextValue = runIfFn(next, value);\n\n    if (!shouldUpdateProp(value, nextValue)) {\n      return;\n    }\n\n    if (!isControlled) {\n      setValue(nextValue);\n    }\n\n    onChangeProp(nextValue);\n  }, [isControlled, onChangeProp, value, shouldUpdateProp]);\n  return [value, updateValue];\n}\n\n/**\n * React hook to measure a component's dimensions\n *\n * @param ref ref of the component to measure\n * @param observe if `true`, resize and scroll observers will be turned on\n */\n\nfunction useDimensions(ref, observe) {\n  var _React$useState = React.useState(null),\n      dimensions = _React$useState[0],\n      setDimensions = _React$useState[1];\n\n  var rafId = React.useRef();\n  useSafeLayoutEffect(function () {\n    if (!ref.current) return undefined;\n    var node = ref.current;\n\n    function measure() {\n      rafId.current = requestAnimationFrame(function () {\n        var boxModel = getBox(node);\n        setDimensions(boxModel);\n      });\n    }\n\n    measure();\n\n    if (observe) {\n      window.addEventListener(\"resize\", measure);\n      window.addEventListener(\"scroll\", measure);\n    }\n\n    return function () {\n      if (observe) {\n        window.removeEventListener(\"resize\", measure);\n        window.removeEventListener(\"scroll\", measure);\n      }\n\n      if (rafId.current) {\n        cancelAnimationFrame(rafId.current);\n      }\n    };\n  }, [observe]);\n  return dimensions;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\n// This implementation is heavily inspired by react-aria's implementation\nfunction useId(idProp, prefix) {\n  var id = React.useId();\n  return React.useMemo(function () {\n    return idProp || [prefix, id].filter(Boolean).join(\"-\");\n  }, [idProp, prefix, id]);\n}\n/**\n * React hook to generate ids for use in compound components\n *\n * @param idProp the external id passed from the user\n * @param prefixes array of prefixes to use\n *\n * @example\n *\n * ```js\n * const [buttonId, menuId] = useIds(\"52\", \"button\", \"menu\")\n *\n * // buttonId will be `button-52`\n * // menuId will be `menu-52`\n * ```\n */\n\nfunction useIds(idProp) {\n  for (var _len = arguments.length, prefixes = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    prefixes[_key - 1] = arguments[_key];\n  }\n\n  var id = useId(idProp);\n  return React.useMemo(function () {\n    return prefixes.map(function (prefix) {\n      return prefix + \"-\" + id;\n    });\n  }, [id, prefixes]);\n}\n/**\n * Used to generate an id, and after render, check if that id is rendered, so we know\n * if we can use it in places such as `aria-labelledby`.\n *\n * @param partId - The unique id for the component part\n *\n * @example\n * const { ref, id } = useOptionalPart<HTMLInputElement>(`${id}-label`)\n */\n\nfunction useOptionalPart(partId) {\n  var _React$useState = React.useState(null),\n      id = _React$useState[0],\n      setId = _React$useState[1];\n\n  var ref = React.useCallback(function (node) {\n    setId(node ? partId : null);\n  }, [partId]);\n  return {\n    ref: ref,\n    id: id,\n    isRendered: Boolean(id)\n  };\n}\n\nfunction useDisclosure(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      onCloseProp = _props.onClose,\n      onOpenProp = _props.onOpen,\n      isOpenProp = _props.isOpen,\n      idProp = _props.id;\n  var onOpenPropCallbackRef = useCallbackRef(onOpenProp);\n  var onClosePropCallbackRef = useCallbackRef(onCloseProp);\n\n  var _React$useState = React.useState(props.defaultIsOpen || false),\n      isOpenState = _React$useState[0],\n      setIsOpen = _React$useState[1];\n\n  var _useControllableProp = useControllableProp(isOpenProp, isOpenState),\n      isControlled = _useControllableProp[0],\n      isOpen = _useControllableProp[1];\n\n  var id = useId(idProp, \"disclosure\");\n  var onClose = React.useCallback(function () {\n    if (!isControlled) {\n      setIsOpen(false);\n    }\n\n    onClosePropCallbackRef == null ? void 0 : onClosePropCallbackRef();\n  }, [isControlled, onClosePropCallbackRef]);\n  var onOpen = React.useCallback(function () {\n    if (!isControlled) {\n      setIsOpen(true);\n    }\n\n    onOpenPropCallbackRef == null ? void 0 : onOpenPropCallbackRef();\n  }, [isControlled, onOpenPropCallbackRef]);\n  var onToggle = React.useCallback(function () {\n    var action = isOpen ? onClose : onOpen;\n    action();\n  }, [isOpen, onOpen, onClose]);\n  return {\n    isOpen: !!isOpen,\n    onOpen: onOpen,\n    onClose: onClose,\n    onToggle: onToggle,\n    isControlled: isControlled,\n    getButtonProps: function getButtonProps(props) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      return _extends({}, props, {\n        \"aria-expanded\": isOpen,\n        \"aria-controls\": id,\n        onClick: callAllHandlers(props.onClick, onToggle)\n      });\n    },\n    getDisclosureProps: function getDisclosureProps(props) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      return _extends({}, props, {\n        hidden: !isOpen,\n        id: id\n      });\n    }\n  };\n}\n\nfunction useEventListenerMap() {\n  var listeners = React.useRef(new Map());\n  var currentListeners = listeners.current;\n  var add = React.useCallback(function (el, type, listener, options) {\n    var pointerEventListener = wrapPointerEventHandler(listener, type === \"pointerdown\");\n    listeners.current.set(listener, {\n      __listener: pointerEventListener,\n      type: getPointerEventName(type),\n      el: el,\n      options: options\n    });\n    el.addEventListener(type, pointerEventListener, options);\n  }, []);\n  var remove = React.useCallback(function (el, type, listener, options) {\n    var _listeners$current$ge = listeners.current.get(listener),\n        pointerEventListener = _listeners$current$ge.__listener;\n\n    el.removeEventListener(type, pointerEventListener, options);\n    listeners.current[\"delete\"](pointerEventListener);\n  }, []);\n  React.useEffect(function () {\n    return function () {\n      currentListeners.forEach(function (value, key) {\n        remove(value.el, value.type, key, value.options);\n      });\n    };\n  }, [remove, currentListeners]);\n  return {\n    add: add,\n    remove: remove\n  };\n}\n\n/**\n * React effect hook that invokes only on update.\n * It doesn't invoke on mount\n */\n\nvar useUpdateEffect = function useUpdateEffect(effect, deps) {\n  var renderCycleRef = React.useRef(false);\n  var effectCycleRef = React.useRef(false);\n  React.useEffect(function () {\n    var isMounted = renderCycleRef.current;\n    var shouldRun = isMounted && effectCycleRef.current;\n\n    if (shouldRun) {\n      return effect();\n    }\n\n    effectCycleRef.current = true; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n  React.useEffect(function () {\n    renderCycleRef.current = true;\n    return function () {\n      renderCycleRef.current = false;\n    };\n  }, []);\n};\n\n/**\n * React hook to focus an element conditionally\n *\n * @param ref the ref of the element to focus\n * @param options focus management options\n */\nfunction useFocusEffect(ref, options) {\n  var shouldFocus = options.shouldFocus,\n      preventScroll = options.preventScroll;\n  useUpdateEffect(function () {\n    var node = ref.current;\n    if (!node || !shouldFocus) return;\n\n    if (!hasFocusWithin(node)) {\n      focus(node, {\n        preventScroll: preventScroll,\n        nextTick: true\n      });\n    }\n  }, [shouldFocus, ref, preventScroll]);\n}\n\nfunction preventReturnFocus(containerRef) {\n  var el = containerRef.current;\n  if (!el) return false;\n  var activeElement = getActiveElement(el);\n  if (!activeElement) return false;\n  if (contains(el, activeElement)) return false;\n  if (isTabbable(activeElement)) return true;\n  return false;\n}\n/**\n * Popover hook to manage the focus when the popover closes or hides.\n *\n * We either want to return focus back to the popover trigger or\n * let focus proceed normally if user moved to another interactive\n * element in the viewport.\n */\n\n\nfunction useFocusOnHide(containerRef, options) {\n  var shouldFocusProp = options.shouldFocus,\n      visible = options.visible,\n      focusRef = options.focusRef;\n  var shouldFocus = shouldFocusProp && !visible;\n  useUpdateEffect(function () {\n    if (!shouldFocus) return;\n\n    if (preventReturnFocus(containerRef)) {\n      return;\n    }\n\n    var el = (focusRef == null ? void 0 : focusRef.current) || containerRef.current;\n\n    if (el) {\n      focus(el, {\n        nextTick: true\n      });\n    }\n  }, [shouldFocus, containerRef, focusRef]);\n}\n\n/**\n * Credit goes to `framer-motion` of this useful utilities.\n * License can be found here: https://github.com/framer/motion\n */\n/**\n * @internal\n */\n\nfunction usePointerEvent(env, eventName, handler, options) {\n  return useEventListener(getPointerEventName(eventName), wrapPointerEventHandler(handler, eventName === \"pointerdown\"), env, options);\n}\n\n/**\n * Polyfill to get `relatedTarget` working correctly consistently\n * across all browsers.\n *\n * It ensures that elements receives focus on pointer down if\n * it's not the active element.\n *\n * @internal\n */\nfunction useFocusOnPointerDown(props) {\n  var ref = props.ref,\n      elements = props.elements,\n      enabled = props.enabled;\n  var isSafari = detectBrowser(\"Safari\");\n\n  var doc = function doc() {\n    return getOwnerDocument(ref.current);\n  };\n\n  usePointerEvent(doc, \"pointerdown\", function (event) {\n    if (!isSafari || !enabled) return;\n    var target = event.target;\n    var els = elements != null ? elements : [ref];\n    var isValidTarget = els.some(function (elementOrRef) {\n      var el = isRefObject(elementOrRef) ? elementOrRef.current : elementOrRef;\n      return contains(el, target);\n    });\n\n    if (!isActiveElement(target) && isValidTarget) {\n      event.preventDefault();\n      focus(target);\n    }\n  });\n}\n\nvar defaultOptions = {\n  preventScroll: true,\n  shouldFocus: false\n};\nfunction useFocusOnShow(target, options) {\n  if (options === void 0) {\n    options = defaultOptions;\n  }\n\n  var _options = options,\n      focusRef = _options.focusRef,\n      preventScroll = _options.preventScroll,\n      shouldFocus = _options.shouldFocus,\n      visible = _options.visible;\n  var element = isRefObject(target) ? target.current : target;\n  var autoFocus = shouldFocus && visible;\n  var onFocus = useCallback(function () {\n    if (!element || !autoFocus) return;\n    if (contains(element, document.activeElement)) return;\n\n    if (focusRef != null && focusRef.current) {\n      focus(focusRef.current, {\n        preventScroll: preventScroll,\n        nextTick: true\n      });\n    } else {\n      var tabbableEls = getAllFocusable(element);\n\n      if (tabbableEls.length > 0) {\n        focus(tabbableEls[0], {\n          preventScroll: preventScroll,\n          nextTick: true\n        });\n      }\n    }\n  }, [autoFocus, preventScroll, element, focusRef]);\n  useUpdateEffect(function () {\n    onFocus();\n  }, [onFocus]);\n  useEventListener(\"transitionend\", onFocus, element);\n}\n\nfunction useUnmountEffect(fn, deps) {\n  if (deps === void 0) {\n    deps = [];\n  }\n\n  return React.useEffect(function () {\n    return function () {\n      return fn();\n    };\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  deps);\n}\n\nfunction useForceUpdate() {\n  var unloadingRef = React.useRef(false);\n\n  var _React$useState = React.useState(0),\n      count = _React$useState[0],\n      setCount = _React$useState[1];\n\n  useUnmountEffect(function () {\n    unloadingRef.current = true;\n  });\n  return React.useCallback(function () {\n    if (!unloadingRef.current) {\n      setCount(count + 1);\n    }\n  }, [count]);\n}\n\n/**\n * React Hook that provides a declarative `setInterval`\n *\n * @param callback the callback to execute at interval\n * @param delay the `setInterval` delay (in ms)\n */\n\nfunction useInterval(callback, delay) {\n  var fn = useCallbackRef(callback);\n  React.useEffect(function () {\n    var intervalId = null;\n\n    var tick = function tick() {\n      return fn();\n    };\n\n    if (delay !== null) {\n      intervalId = window.setInterval(tick, delay);\n    }\n\n    return function () {\n      if (intervalId) {\n        window.clearInterval(intervalId);\n      }\n    };\n  }, [delay, fn]);\n}\n\n/**\n * React hook to persist any value between renders,\n * but keeps it up-to-date if it changes.\n *\n * @param value the value or function to persist\n */\n\nfunction useLatestRef(value) {\n  var ref = React.useRef(null);\n  ref.current = value;\n  return ref;\n}\n\n/* eslint-disable react-hooks/exhaustive-deps */\nfunction assignRef(ref, value) {\n  if (ref == null) return;\n\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n\n  try {\n    // @ts-ignore\n    ref.current = value;\n  } catch (error) {\n    throw new Error(\"Cannot assign value '\" + value + \"' to ref '\" + ref + \"'\");\n  }\n}\n/**\n * React hook that merges react refs into a single memoized function\n *\n * @example\n * import React from \"react\";\n * import { useMergeRefs } from `@chakra-ui/hooks`;\n *\n * const Component = React.forwardRef((props, ref) => {\n *   const internalRef = React.useRef();\n *   return <div {...props} ref={useMergeRefs(internalRef, ref)} />;\n * });\n */\n\nfunction useMergeRefs() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n\n  return React.useMemo(function () {\n    if (refs.every(function (ref) {\n      return ref == null;\n    })) {\n      return null;\n    }\n\n    return function (node) {\n      refs.forEach(function (ref) {\n        if (ref) assignRef(ref, node);\n      });\n    };\n  }, refs);\n}\n\nfunction useMouseDownRef(shouldListen) {\n  if (shouldListen === void 0) {\n    shouldListen = true;\n  }\n\n  var mouseDownRef = React__default.useRef();\n  useEventListener(\"mousedown\", function (event) {\n    if (shouldListen) {\n      mouseDownRef.current = event.target;\n    }\n  });\n  return mouseDownRef;\n}\n\n/**\n * Example, used in components like Dialogs and Popovers, so they can close\n * when a user clicks outside them.\n */\nfunction useOutsideClick(props) {\n  var ref = props.ref,\n      handler = props.handler,\n      _props$enabled = props.enabled,\n      enabled = _props$enabled === void 0 ? true : _props$enabled;\n  var savedHandler = useCallbackRef(handler);\n  var stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false\n  });\n  var state = stateRef.current;\n  useEffect(function () {\n    if (!enabled) return;\n\n    var onPointerDown = function onPointerDown(e) {\n      if (isValidEvent(e, ref)) {\n        state.isPointerDown = true;\n      }\n    };\n\n    var onMouseUp = function onMouseUp(event) {\n      if (state.ignoreEmulatedMouseEvents) {\n        state.ignoreEmulatedMouseEvents = false;\n        return;\n      }\n\n      if (state.isPointerDown && handler && isValidEvent(event, ref)) {\n        state.isPointerDown = false;\n        savedHandler(event);\n      }\n    };\n\n    var onTouchEnd = function onTouchEnd(event) {\n      state.ignoreEmulatedMouseEvents = true;\n\n      if (handler && state.isPointerDown && isValidEvent(event, ref)) {\n        state.isPointerDown = false;\n        savedHandler(event);\n      }\n    };\n\n    var doc = getOwnerDocument(ref.current);\n    doc.addEventListener(\"mousedown\", onPointerDown, true);\n    doc.addEventListener(\"mouseup\", onMouseUp, true);\n    doc.addEventListener(\"touchstart\", onPointerDown, true);\n    doc.addEventListener(\"touchend\", onTouchEnd, true);\n    return function () {\n      doc.removeEventListener(\"mousedown\", onPointerDown, true);\n      doc.removeEventListener(\"mouseup\", onMouseUp, true);\n      doc.removeEventListener(\"touchstart\", onPointerDown, true);\n      doc.removeEventListener(\"touchend\", onTouchEnd, true);\n    };\n  }, [handler, ref, savedHandler, state, enabled]);\n}\n\nfunction isValidEvent(event, ref) {\n  var _ref$current;\n\n  var target = event.target;\n  if (event.button > 0) return false; // if the event target is no longer in the document\n\n  if (target) {\n    var doc = getOwnerDocument(target);\n    if (!doc.contains(target)) return false;\n  }\n\n  return !((_ref$current = ref.current) != null && _ref$current.contains(target));\n}\n\nfunction usePanGesture(ref, props) {\n  var onPan = props.onPan,\n      onPanStart = props.onPanStart,\n      onPanEnd = props.onPanEnd,\n      onPanSessionStart = props.onPanSessionStart,\n      onPanSessionEnd = props.onPanSessionEnd,\n      threshold = props.threshold;\n  var hasPanEvents = Boolean(onPan || onPanStart || onPanEnd || onPanSessionStart || onPanSessionEnd);\n  var panSession = useRef(null);\n  var handlers = {\n    onSessionStart: onPanSessionStart,\n    onSessionEnd: onPanSessionEnd,\n    onStart: onPanStart,\n    onMove: onPan,\n    onEnd: function onEnd(event, info) {\n      panSession.current = null;\n      onPanEnd == null ? void 0 : onPanEnd(event, info);\n    }\n  };\n  useEffect(function () {\n    var _panSession$current;\n\n    (_panSession$current = panSession.current) == null ? void 0 : _panSession$current.updateHandlers(handlers);\n  });\n\n  function onPointerDown(event) {\n    panSession.current = new PanSession(event, handlers, threshold);\n  }\n\n  usePointerEvent(function () {\n    return ref.current;\n  }, \"pointerdown\", hasPanEvents ? onPointerDown : noop);\n  useUnmountEffect(function () {\n    var _panSession$current2;\n\n    (_panSession$current2 = panSession.current) == null ? void 0 : _panSession$current2.end();\n    panSession.current = null;\n  });\n}\n\nfunction usePrevious(value) {\n  var ref = useRef();\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n\n/**\n * Checks if the key pressed is a printable character\n * and can be used for shortcut navigation\n */\n\nfunction isPrintableCharacter(event) {\n  var key = event.key;\n  return key.length === 1 || key.length > 1 && /[^a-zA-Z0-9]/.test(key);\n}\n\n/**\n * React hook that provides an enhanced keydown handler,\n * that's used for key navigation within menus, select dropdowns.\n */\nfunction useShortcut(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      _props$timeout = _props.timeout,\n      timeout = _props$timeout === void 0 ? 300 : _props$timeout,\n      _props$preventDefault = _props.preventDefault,\n      preventDefault = _props$preventDefault === void 0 ? function () {\n    return true;\n  } : _props$preventDefault;\n\n  var _React$useState = React.useState([]),\n      keys = _React$useState[0],\n      setKeys = _React$useState[1];\n\n  var timeoutRef = React.useRef();\n\n  var flush = function flush() {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = null;\n    }\n  };\n\n  var clearKeysAfterDelay = function clearKeysAfterDelay() {\n    flush();\n    timeoutRef.current = setTimeout(function () {\n      setKeys([]);\n      timeoutRef.current = null;\n    }, timeout);\n  };\n\n  React.useEffect(function () {\n    return flush;\n  }, []);\n\n  function onKeyDown(fn) {\n    return function (event) {\n      if (event.key === \"Backspace\") {\n        var keysCopy = [].concat(keys);\n        keysCopy.pop();\n        setKeys(keysCopy);\n        return;\n      }\n\n      if (isPrintableCharacter(event)) {\n        var _keysCopy = keys.concat(event.key);\n\n        if (preventDefault(event)) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n\n        setKeys(_keysCopy);\n        fn(_keysCopy.join(\"\"));\n        clearKeysAfterDelay();\n      }\n    };\n  }\n\n  return onKeyDown;\n}\n\n/**\n * React hook that provides a declarative `setTimeout`\n *\n * @param callback the callback to run after specified delay\n * @param delay the delay (in ms)\n */\n\nfunction useTimeout(callback, delay) {\n  var fn = useCallbackRef(callback);\n  React.useEffect(function () {\n    if (delay == null) return undefined;\n    var timeoutId = null;\n    timeoutId = window.setTimeout(function () {\n      fn();\n    }, delay);\n    return function () {\n      if (timeoutId) {\n        window.clearTimeout(timeoutId);\n      }\n    };\n  }, [delay, fn]);\n}\n\nfunction useWhyDidYouUpdate(name, props) {\n  var previousProps = React.useRef();\n  React.useEffect(function () {\n    if (previousProps.current) {\n      var allKeys = Object.keys(_extends({}, previousProps.current, props));\n      var changesObj = {};\n      allKeys.forEach(function (key) {\n        if (previousProps.current[key] !== props[key]) {\n          changesObj[key] = {\n            from: previousProps.current[key],\n            to: props[key]\n          };\n        }\n      });\n\n      if (Object.keys(changesObj).length) {\n        console.log(\"[why-did-you-update]\", name, changesObj);\n      }\n    }\n\n    previousProps.current = props;\n  });\n}\n\nexport { assignRef, useBoolean, useClipboard, useConst, useControllableProp, useControllableState, useDimensions, useDisclosure, useEventListenerMap, useFocusEffect, useFocusOnHide, useFocusOnPointerDown, useFocusOnShow, useForceUpdate, useId, useIds, useInterval, useLatestRef, useMergeRefs, useMouseDownRef, useOptionalPart, useOutsideClick, usePanGesture, usePointerEvent, usePrevious, useShortcut, useTimeout, useUnmountEffect, useUpdateEffect, useWhyDidYouUpdate };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
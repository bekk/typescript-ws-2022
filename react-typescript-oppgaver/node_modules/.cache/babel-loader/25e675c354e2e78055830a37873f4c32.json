{"ast":null,"code":"import { useTheme } from '@chakra-ui/system';\nimport { isBrowser, __DEV__, memoizedGet, breakpoints, isArray, fromEntries, arrayToObjectNotation } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport { useState, useLayoutEffect, useEffect } from 'react';\nimport { useEnvironment } from '@chakra-ui/react-env';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar useSafeLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n/**\n * React hook that tracks state of a CSS media query\n *\n * @param query the media query to match\n * @param defaultValues the default values to match\n */\n\nfunction useMediaQuery(query, defaultValues) {\n  var env = useEnvironment();\n  var queries = Array.isArray(query) ? query : [query];\n  var defaults = Array.isArray(defaultValues) ? defaultValues : [defaultValues];\n  defaults = defaults.filter(function (v) {\n    return v != null;\n  });\n\n  var _useState = useState(function () {\n    if (!isBrowser) {\n      return queries.map(function (query, index) {\n        var _defaults$index;\n\n        return {\n          media: query,\n          matches: (_defaults$index = defaults[index]) != null ? _defaults$index : false\n        };\n      });\n    }\n\n    return queries.map(function (query) {\n      return {\n        media: query,\n        matches: env.window.matchMedia(query).matches\n      };\n    });\n  }),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  useSafeLayoutEffect(function () {\n    if (!isBrowser) return;\n\n    var handler = function handler(evt) {\n      setValue(function (prev) {\n        return prev.slice().map(function (item) {\n          if (item.media === evt.media) return _extends({}, item, {\n            matches: evt.matches\n          });\n          return item;\n        });\n      });\n    };\n\n    var mql = queries.map(function (query) {\n      return env.window.matchMedia(query);\n    });\n    mql.forEach(function (mql) {\n      if (typeof mql.addListener === \"function\") mql.addListener(handler);else mql.addEventListener(\"change\", handler);\n    });\n    return function () {\n      mql.forEach(function (mql) {\n        if (typeof mql.removeListener === \"function\") mql.removeListener(handler);else mql.removeEventListener(\"change\", handler);\n      });\n    };\n  }, []);\n  return value.map(function (item) {\n    return item.matches;\n  });\n}\n/**\n * Visibility\n *\n * React component to control the visibility of its\n * children based on the current breakpoint\n */\n\n\nvar Visibility = function Visibility(props) {\n  var breakpoint = props.breakpoint,\n      hide = props.hide,\n      children = props.children;\n\n  var _useMediaQuery = useMediaQuery(breakpoint),\n      show = _useMediaQuery[0];\n\n  var isVisible = hide ? !show : show;\n  var rendered = isVisible ? children : null;\n  return rendered;\n};\n\nvar Hide = function Hide(props) {\n  var children = props.children;\n  var query = useQuery(props);\n  return /*#__PURE__*/React.createElement(Visibility, {\n    breakpoint: query,\n    hide: true\n  }, children);\n};\n\nif (__DEV__) {\n  Hide.displayName = \"Hide\";\n}\n\nvar Show = function Show(props) {\n  var children = props.children;\n  var query = useQuery(props);\n  return /*#__PURE__*/React.createElement(Visibility, {\n    breakpoint: query\n  }, children);\n};\n\nif (__DEV__) {\n  Show.displayName = \"Show\";\n}\n\nvar getBreakpoint = function getBreakpoint(theme, value) {\n  return memoizedGet(theme, \"breakpoints.\" + value, value);\n};\n\nfunction useQuery(props) {\n  var _props$breakpoint = props.breakpoint,\n      breakpoint = _props$breakpoint === void 0 ? \"\" : _props$breakpoint,\n      below = props.below,\n      above = props.above;\n  var theme = useTheme();\n  var bpBelow = getBreakpoint(theme, below);\n  var bpAbove = getBreakpoint(theme, above);\n  var query = breakpoint;\n\n  if (bpBelow) {\n    query = \"(max-width: \" + bpBelow + \")\";\n  } else if (bpAbove) {\n    query = \"(min-width: \" + bpAbove + \")\";\n  }\n\n  return query;\n}\n/**\n * React hook used to get the user's animation preference.\n */\n\n\nfunction usePrefersReducedMotion() {\n  var _useMediaQuery = useMediaQuery(\"(prefers-reduced-motion: reduce)\"),\n      prefersReducedMotion = _useMediaQuery[0];\n\n  return prefersReducedMotion;\n}\n/**\n * React hook for getting the user's color mode preference.\n */\n\n\nfunction useColorModePreference() {\n  var _useMediaQuery2 = useMediaQuery([\"(prefers-color-scheme: light)\", \"(prefers-color-scheme: dark)\"]),\n      isLight = _useMediaQuery2[0],\n      isDark = _useMediaQuery2[1];\n\n  if (isLight) return \"light\";\n  if (isDark) return \"dark\";\n  return undefined;\n}\n/**\n * React hook used to get the current responsive media breakpoint.\n *\n * @param [defaultBreakpoint=\"base\"] default breakpoint name\n * (in non-window environments like SSR)\n *\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\n * to get the default breakpoint value from the user-agent\n */\n\n\nfunction useBreakpoint(defaultBreakpoint // default value ensures SSR+CSR consistency\n) {\n  var _breakpoints$index$br, _breakpoints$index;\n\n  if (defaultBreakpoint === void 0) {\n    defaultBreakpoint = \"base\";\n  }\n\n  var theme = useTheme();\n\n  var breakpoints = theme.__breakpoints.details.map(function (_ref) {\n    var minMaxQuery = _ref.minMaxQuery,\n        breakpoint = _ref.breakpoint;\n    return {\n      breakpoint: breakpoint,\n      query: minMaxQuery.replace(\"@media screen and \", \"\")\n    };\n  });\n\n  var values = useMediaQuery(breakpoints.map(function (bp) {\n    return bp.query;\n  }), breakpoints.map(function (bp) {\n    return bp.breakpoint === defaultBreakpoint;\n  }));\n  var index = values.findIndex(function (value) {\n    return value == true;\n  });\n  return (_breakpoints$index$br = (_breakpoints$index = breakpoints[index]) == null ? void 0 : _breakpoints$index.breakpoint) != null ? _breakpoints$index$br : defaultBreakpoint;\n}\n\nfunction getClosestValue(values, breakpoint, breakpoints$1) {\n  if (breakpoints$1 === void 0) {\n    breakpoints$1 = breakpoints;\n  }\n\n  var index = Object.keys(values).indexOf(breakpoint);\n\n  if (index !== -1) {\n    return values[breakpoint];\n  }\n\n  var stopIndex = breakpoints$1.indexOf(breakpoint);\n\n  while (stopIndex >= 0) {\n    var key = breakpoints$1[stopIndex];\n\n    if (values[key] != null) {\n      index = stopIndex;\n      break;\n    }\n\n    stopIndex -= 1;\n  }\n\n  if (index !== -1) {\n    var _key = breakpoints$1[index];\n    return values[_key];\n  }\n\n  return undefined;\n}\n/**\n * React hook for getting the value for the current breakpoint from the\n * provided responsive values object.\n *\n * @param values\n * @param [defaultBreakpoint] default breakpoint name\n * (in non-window environments like SSR)\n *\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\n * to get the default breakpoint value from the user-agent\n *\n * @example\n * const width = useBreakpointValue({ base: '150px', md: '250px' })\n */\n\n\nfunction useBreakpointValue(values, defaultBreakpoint) {\n  var _theme$__breakpoints;\n\n  var breakpoint = useBreakpoint(defaultBreakpoint);\n  var theme = useTheme();\n  if (!breakpoint) return undefined;\n  /**\n   * Get the sorted breakpoint keys from the provided breakpoints\n   */\n\n  var breakpoints = Array.from(((_theme$__breakpoints = theme.__breakpoints) == null ? void 0 : _theme$__breakpoints.keys) || []);\n  var obj = isArray(values) ? fromEntries(Object.entries(arrayToObjectNotation(values, breakpoints)).map(function (_ref) {\n    var key = _ref[0],\n        value = _ref[1];\n    return [key, value];\n  })) : values;\n  return getClosestValue(obj, breakpoint, breakpoints);\n}\n\nexport { Hide, Show, useBreakpoint, useBreakpointValue, useColorModePreference, useMediaQuery, usePrefersReducedMotion, useQuery };","map":{"version":3,"names":["useTheme","isBrowser","__DEV__","memoizedGet","breakpoints","isArray","fromEntries","arrayToObjectNotation","React","useState","useLayoutEffect","useEffect","useEnvironment","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","useSafeLayoutEffect","useMediaQuery","query","defaultValues","env","queries","Array","defaults","filter","v","_useState","map","index","_defaults$index","media","matches","window","matchMedia","value","setValue","handler","evt","prev","slice","item","mql","forEach","addListener","addEventListener","removeListener","removeEventListener","Visibility","props","breakpoint","hide","children","_useMediaQuery","show","isVisible","rendered","Hide","useQuery","createElement","displayName","Show","getBreakpoint","theme","_props$breakpoint","below","above","bpBelow","bpAbove","usePrefersReducedMotion","prefersReducedMotion","useColorModePreference","_useMediaQuery2","isLight","isDark","undefined","useBreakpoint","defaultBreakpoint","_breakpoints$index$br","_breakpoints$index","__breakpoints","details","_ref","minMaxQuery","replace","values","bp","findIndex","getClosestValue","breakpoints$1","keys","indexOf","stopIndex","_key","useBreakpointValue","_theme$__breakpoints","from","obj","entries"],"sources":["/Users/ingeborg/projects/code/typescript-ws-2022/node_modules/@chakra-ui/media-query/dist/chakra-ui-media-query.esm.js"],"sourcesContent":["import { useTheme } from '@chakra-ui/system';\nimport { isBrowser, __DEV__, memoizedGet, breakpoints, isArray, fromEntries, arrayToObjectNotation } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport { useState, useLayoutEffect, useEffect } from 'react';\nimport { useEnvironment } from '@chakra-ui/react-env';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar useSafeLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n/**\n * React hook that tracks state of a CSS media query\n *\n * @param query the media query to match\n * @param defaultValues the default values to match\n */\n\nfunction useMediaQuery(query, defaultValues) {\n  var env = useEnvironment();\n  var queries = Array.isArray(query) ? query : [query];\n  var defaults = Array.isArray(defaultValues) ? defaultValues : [defaultValues];\n  defaults = defaults.filter(function (v) {\n    return v != null;\n  });\n\n  var _useState = useState(function () {\n    if (!isBrowser) {\n      return queries.map(function (query, index) {\n        var _defaults$index;\n\n        return {\n          media: query,\n          matches: (_defaults$index = defaults[index]) != null ? _defaults$index : false\n        };\n      });\n    }\n\n    return queries.map(function (query) {\n      return {\n        media: query,\n        matches: env.window.matchMedia(query).matches\n      };\n    });\n  }),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  useSafeLayoutEffect(function () {\n    if (!isBrowser) return;\n\n    var handler = function handler(evt) {\n      setValue(function (prev) {\n        return prev.slice().map(function (item) {\n          if (item.media === evt.media) return _extends({}, item, {\n            matches: evt.matches\n          });\n          return item;\n        });\n      });\n    };\n\n    var mql = queries.map(function (query) {\n      return env.window.matchMedia(query);\n    });\n    mql.forEach(function (mql) {\n      if (typeof mql.addListener === \"function\") mql.addListener(handler);else mql.addEventListener(\"change\", handler);\n    });\n    return function () {\n      mql.forEach(function (mql) {\n        if (typeof mql.removeListener === \"function\") mql.removeListener(handler);else mql.removeEventListener(\"change\", handler);\n      });\n    };\n  }, []);\n  return value.map(function (item) {\n    return item.matches;\n  });\n}\n\n/**\n * Visibility\n *\n * React component to control the visibility of its\n * children based on the current breakpoint\n */\nvar Visibility = function Visibility(props) {\n  var breakpoint = props.breakpoint,\n      hide = props.hide,\n      children = props.children;\n\n  var _useMediaQuery = useMediaQuery(breakpoint),\n      show = _useMediaQuery[0];\n\n  var isVisible = hide ? !show : show;\n  var rendered = isVisible ? children : null;\n  return rendered;\n};\n\nvar Hide = function Hide(props) {\n  var children = props.children;\n  var query = useQuery(props);\n  return /*#__PURE__*/React.createElement(Visibility, {\n    breakpoint: query,\n    hide: true\n  }, children);\n};\n\nif (__DEV__) {\n  Hide.displayName = \"Hide\";\n}\n\nvar Show = function Show(props) {\n  var children = props.children;\n  var query = useQuery(props);\n  return /*#__PURE__*/React.createElement(Visibility, {\n    breakpoint: query\n  }, children);\n};\n\nif (__DEV__) {\n  Show.displayName = \"Show\";\n}\n\nvar getBreakpoint = function getBreakpoint(theme, value) {\n  return memoizedGet(theme, \"breakpoints.\" + value, value);\n};\n\nfunction useQuery(props) {\n  var _props$breakpoint = props.breakpoint,\n      breakpoint = _props$breakpoint === void 0 ? \"\" : _props$breakpoint,\n      below = props.below,\n      above = props.above;\n  var theme = useTheme();\n  var bpBelow = getBreakpoint(theme, below);\n  var bpAbove = getBreakpoint(theme, above);\n  var query = breakpoint;\n\n  if (bpBelow) {\n    query = \"(max-width: \" + bpBelow + \")\";\n  } else if (bpAbove) {\n    query = \"(min-width: \" + bpAbove + \")\";\n  }\n\n  return query;\n}\n\n/**\n * React hook used to get the user's animation preference.\n */\n\nfunction usePrefersReducedMotion() {\n  var _useMediaQuery = useMediaQuery(\"(prefers-reduced-motion: reduce)\"),\n      prefersReducedMotion = _useMediaQuery[0];\n\n  return prefersReducedMotion;\n}\n/**\n * React hook for getting the user's color mode preference.\n */\n\nfunction useColorModePreference() {\n  var _useMediaQuery2 = useMediaQuery([\"(prefers-color-scheme: light)\", \"(prefers-color-scheme: dark)\"]),\n      isLight = _useMediaQuery2[0],\n      isDark = _useMediaQuery2[1];\n\n  if (isLight) return \"light\";\n  if (isDark) return \"dark\";\n  return undefined;\n}\n\n/**\n * React hook used to get the current responsive media breakpoint.\n *\n * @param [defaultBreakpoint=\"base\"] default breakpoint name\n * (in non-window environments like SSR)\n *\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\n * to get the default breakpoint value from the user-agent\n */\n\nfunction useBreakpoint(defaultBreakpoint // default value ensures SSR+CSR consistency\n) {\n  var _breakpoints$index$br, _breakpoints$index;\n\n  if (defaultBreakpoint === void 0) {\n    defaultBreakpoint = \"base\";\n  }\n\n  var theme = useTheme();\n\n  var breakpoints = theme.__breakpoints.details.map(function (_ref) {\n    var minMaxQuery = _ref.minMaxQuery,\n        breakpoint = _ref.breakpoint;\n    return {\n      breakpoint: breakpoint,\n      query: minMaxQuery.replace(\"@media screen and \", \"\")\n    };\n  });\n\n  var values = useMediaQuery(breakpoints.map(function (bp) {\n    return bp.query;\n  }), breakpoints.map(function (bp) {\n    return bp.breakpoint === defaultBreakpoint;\n  }));\n  var index = values.findIndex(function (value) {\n    return value == true;\n  });\n  return (_breakpoints$index$br = (_breakpoints$index = breakpoints[index]) == null ? void 0 : _breakpoints$index.breakpoint) != null ? _breakpoints$index$br : defaultBreakpoint;\n}\n\nfunction getClosestValue(values, breakpoint, breakpoints$1) {\n  if (breakpoints$1 === void 0) {\n    breakpoints$1 = breakpoints;\n  }\n\n  var index = Object.keys(values).indexOf(breakpoint);\n\n  if (index !== -1) {\n    return values[breakpoint];\n  }\n\n  var stopIndex = breakpoints$1.indexOf(breakpoint);\n\n  while (stopIndex >= 0) {\n    var key = breakpoints$1[stopIndex];\n\n    if (values[key] != null) {\n      index = stopIndex;\n      break;\n    }\n\n    stopIndex -= 1;\n  }\n\n  if (index !== -1) {\n    var _key = breakpoints$1[index];\n    return values[_key];\n  }\n\n  return undefined;\n}\n\n/**\n * React hook for getting the value for the current breakpoint from the\n * provided responsive values object.\n *\n * @param values\n * @param [defaultBreakpoint] default breakpoint name\n * (in non-window environments like SSR)\n *\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\n * to get the default breakpoint value from the user-agent\n *\n * @example\n * const width = useBreakpointValue({ base: '150px', md: '250px' })\n */\n\nfunction useBreakpointValue(values, defaultBreakpoint) {\n  var _theme$__breakpoints;\n\n  var breakpoint = useBreakpoint(defaultBreakpoint);\n  var theme = useTheme();\n  if (!breakpoint) return undefined;\n  /**\n   * Get the sorted breakpoint keys from the provided breakpoints\n   */\n\n  var breakpoints = Array.from(((_theme$__breakpoints = theme.__breakpoints) == null ? void 0 : _theme$__breakpoints.keys) || []);\n  var obj = isArray(values) ? fromEntries(Object.entries(arrayToObjectNotation(values, breakpoints)).map(function (_ref) {\n    var key = _ref[0],\n        value = _ref[1];\n    return [key, value];\n  })) : values;\n  return getClosestValue(obj, breakpoint, breakpoints);\n}\n\nexport { Hide, Show, useBreakpoint, useBreakpointValue, useColorModePreference, useMediaQuery, usePrefersReducedMotion, useQuery };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}